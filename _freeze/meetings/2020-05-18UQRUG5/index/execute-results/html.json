{
  "hash": "8f8a551c76e512139578ca47bc1ccf2d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: UQRUG 5\ndate: '2020-05-18'\ndescription: '**Overview**: reprex, R 4.0 news<br /> **Questions**: asymptotic regression model, revtools, uavRst, Shiny'\ncategories: [meeting, modelling, revtools, uavrst, shiny]\n---\n\n\n\n\n\n### 2020-05-18: UQRUG 5\n\nWe are meeting online again!\n\nToday, we talk about whatever issues you might have, as well as **reprex** and **R 4.0**.\n\n\n#### Attendees\n\nFeel free to share your contact, specialty and questions here.\n\n* **Steph** (UQ Library), technology trainer, likes R and maps and Open Science.\n    * Email (work): s.guillou@uq.edu.au ; Social (personal): [mastodon](https://mastodon.indie.host/@stragu/)\n* **Paula** \n* I am wondering if some could help me to do **asymptotic regression model**. Thank you!\n* **Ruth** - I have seen online a package called \"revtools\" for screening abstracts and titles of journals, would someone help me with the code (for future reference/projects)\n* ... and **11 more R users**!\n\n#### reprex\n\nThe **reprex** website introduces what the reprex package is useful for, i.e. creating **reproducible examples**: https://reprex.tidyverse.org/\n\nShare your reprex example here!\n\nSteph's:\n\n``` r\n# R 4.0 does not import strings as factors by default anymore!\n\n# create a fake dataframe:\ndf <- data.frame(ID = LETTERS[1:10],\n                 gender = sample(c(\"man\", \"woman\", \"enby\", \"other\", \"PNS\"),\n                                 10, replace = TRUE),\n                 age = sample(1:100,\n                              10, replace = TRUE))\n\n# check class\nclass(df$gender)\n#> [1] \"character\"\n\n# summary() might be a bit less informative\nsummary(df)\n#>       ID               gender               age       \n#>  Length:10          Length:10          Min.   : 5.00  \n#>  Class :character   Class :character   1st Qu.:18.00  \n#>  Mode  :character   Mode  :character   Median :65.50  \n#>                                        Mean   :56.00  \n#>                                        3rd Qu.:91.75  \n#>                                        Max.   :96.00\n```\n\n<sup>Created on 2020-05-18 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>\n\n#### Topics discussed\n\n* New in **R 4.0**:\n    * Improved default colour palette: https://developer.r-project.org/Blog/public/2019/11/21/a-new-palette-for-r/index.html\n    * New StringsAsFactors default value set to `FALSE`: https://developer.r-project.org/Blog/public/2020/02/16/stringsasfactors/index.html\n    * Matrices inherit the \"array\" class\n* **reprex** package for reproducible examples:\n    * Official docs: https://reprex.tidyverse.org/\n* **Shiny** tutorials:\n    * Tutorial: https://shiny.rstudio.com/tutorial/\n* Ruth was interested in **revtools**, which provides \"tools for evidence synthesis\":\n    * Website: https://revtools.net\n    * Function documentation: https://cran.r-project.org/web/packages/revtools/revtools.pdf\n* Resources for **learning R**:\n    * exercism: https://exercism.io\n    * Upcoming 1.3 version of RStudio integrates [learnr](https://rstudio.github.io/learnr/) with a new \"Tutorial\" pane: https://rstudio.com/products/rstudio/download/preview-release-notes/\n* Patrick was interested in **uavRst**: _Unmanned Aerial Vehicle Remote Sensing Toolbox_ (not on CRAN):\n    * Website: https://gisma.github.io/uavRst/\n    * It requires quite a few libraries!\n\nExample code used during the meetup:\n\n```r\n# R 4.0 updates\n\n# does not import strings as factors by default anymore!\n\n# create a fake dataframe:\ndf <- data.frame(ID = LETTERS[1:15],\n                 gender = sample(c(\"man\", \"woman\", \"enby\", \"fluid\", \"other\", \"PNS\"),\n                                 15, replace = TRUE),\n                 age = sample(1:100, 15, replace = TRUE),\n                 score = sample(10:300, 15, replace = TRUE))\n\n# check class\nclass(df$gender)\n\ntypeof(as.factor(df$gender))\n\n\n# summary() might be a bit less informative\nsummary(df)\n\n# default palette\nplot(df$age, df$score, col = as.factor(df$gender))\n# see the values\npalette()\n\n# class inheritance\nclass(diag(1))\n\n# warning when joining datasets with different factor levels\n# create two datasets:\ndf1 <- data.frame(name =  c(\"blah\", \"bloh\"),\n                  height = c(123, 234),\n                  stringsAsFactors = TRUE)\ndf2 <- data.frame(name =  c(\"blah\", \"blih\"),\n                  weight = c(456, 678),\n                  stringsAsFactors = TRUE)\n\n# dplyr warns when joining by a key that does not share\n# the exact same levels between the two tables\nlibrary(dplyr)\njoined <- left_join(df1, df2)\n# see that it converted to characters for safety\nstr(joined)\n# see that original levels differ\ndf1$name\ndf2$name\n\n# revtools\nlibrary(revtools)\n# show all available data objects\ndata()\n\n?revtools\n```",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}