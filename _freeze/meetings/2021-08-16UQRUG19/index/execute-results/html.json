{
  "hash": "8f7ba08c249e03395f0baaf58d23a3c8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: UQRUG 19\ndate: '2021-08-16'\ncategories: meeting\n---\n\n\n\n\n\n### 2021-08-16: UQRUG 19\n\n#### Participants\n\n* **St√©phane Guillou** (Library): just here to help!\n* **Catherine Kim** (Library/Biology): working on publishing code with a paper\n* **Jordan Pennells** (ANOVA structure)\n* **Violeta Berdejo-Espinola** (make my code more efficient)\n* **Omkar Ravindranatha Katagi** (Here to learn R)\n* ... and 8 more UQRUGers!\n\n\n#### Shared resources\n\nLinks we talked about today:\n\n* Great books / resources to get started:\n    * ***R for Data Science*** (aka \"R4DS\"): https://r4ds.had.co.nz/\n        * [Slack community of R4DS](https://rfordatascience.slack.com/join/shared_invite/zt-n46lijeb-2RRzQ70U34eH530~PyZsmg#/shared-invite/email)\n        * On Twitter: https://twitter.com/R4DScommunity\n    * **R Cookbook**: https://www.cookbook-r.com/\n    * **RStudio Education**: https://education.rstudio.com and https://education.rstudio.com/learn/\n    * **learnr** package (also integrated in the RStudio \"tutorial\" tab): https://rstudio.github.io/learnr/\n    * **article on linked points between boxplots**: https://datavizpyr.com/how-to-connect-data-points-on-boxplot-with-lines/\n\n\n#### Code snippets\n\nChange the order of categorical variable levels (so ggplot2 uses that order instead of the alphabetical order):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\n                          \n# relevel factors using forcats package\nlibrary(forcats)\nf <-  factor(c(\"a\", \"b\", \"c\", \"d\"), levels = c(\"b\", \"c\", \"d\", \"a\"))\nfct_relevel(f, \"a\", \"c\", \"d\", \"b\")\n\n# relevel eye_color of starwars data\n\nstarwars %>% \n   mutate(eye_color = fct_relevel(eye_color, \"yellow\")) %>% \n   ggplot(aes(x = eye_color)) +\n   geom_bar()\n```\n:::\n\n\n\nUse case_when to rate or recode data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nstarwars\nrange(starwars$height, na.rm = TRUE)\n\n# just based on height\nstarwars_rated <-  starwars %>% \n   mutate(height_rating = case_when(height < 70 ~ \"very small\",\n                                    height < 140 ~ \"quite small\",\n                                    height < 200 ~ \"medium\",\n                                    TRUE ~ \"tall\"))                                       \n                                    \n# recode based on multiple conditions\nrange(starwars$mass, na.rm = TRUE) # check range of mass, second vairable to recode by\n\nstarwars_rated <-  starwars %>% \n   mutate(height_rating = case_when((height < 70) & (mass < 700)~ \"very small and light\",\n                                    height < 140 ~ \"quite small\",\n                                    height < 200 ~ \"medium\",\n                                    TRUE ~ \"tall\"))\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}