{
  "hash": "f25c1e2a0a565c27523ee3740894266a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: UQRUG 24\ndate: '2022-02-23'\ncategories: meeting\n---\n\n\n\n\n\n### 2022-02-23: UQRUG 24\n\n#### Attendees\n\n* **StÃ©phane Guillou**: just helping out\n* **Svetlina Vasileva**\n* **Trinh Huynh** (USC)\n* **Richard Bell**\n* **Luke Gaiter** (ggplot2 lesson)\n* ...and 5 other UQRUGers!\n\n\n#### Code\n\nConvert a table to a `gt` object and then save it to RTF (which can be opened by Word).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gt)\ngt(mtcars) %>% \n  gtsave(\"test.rtf\")\n```\n:::\n\n\n\nAttempting to highlight/label outliers in linear regression plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### geom_text_repel\n# only label players with QoG >  1 or < 0.2\n# align text vertically with nudge_y and allow the labels to \n# move horizontally with direction = \"x\"\nggplot(linear_regression, aes(x= QOG, y = ten_political_conflict, label = district)) + \n        geom_point(color = dplyr::case_when(linear_regression$QOG > 1 ~ \"#1b9e77\", \n                                            linear_regression$QOG < 0.2 ~ \"#d95f02\",\n                                            TRUE ~ \"#7570b3\"), \n                   size = 3, alpha = 0.8) +\n        geom_text_repel(data          = subset(linear_regression, QOG > 1),\n                        nudge_y       = 32 - subset(linear_regression, QOG > 1)$QOG,\n                        size          = 4,\n                        box.padding   = 1.5,\n                        point.padding = 0.5,\n                        force         = 100,\n                        segment.size  = 0.2,\n                        segment.color = \"grey50\",\n                        direction     = \"x\") +\n        geom_label_repel(data         = subset(linear_regression, QOG < 0.2),\n                         nudge_y       = 16 - subset(linear_regression, QOG < 0.2)$QOG,\n                         size          = 4,\n                         box.padding   = 0.5,\n                         point.padding = 0.5,\n                         force         = 100,\n                         segment.size  = 0.2,\n                         segment.color = \"grey50\",\n                         direction     = \"x\") +\n        scale_x_continuous(expand = expansion(mult = c(0.2, .2))) +\n        scale_y_continuous(expand = expansion(mult = c(0.1, .1))) +\n        theme_classic(base_size = 16)\n```\n:::\n\n\n\n#### Shared resources and topics discussed\n\n* Using Cloudstor's SWAN: [documentation](https://support.aarnet.edu.au/hc/en-us/articles/360000575395-What-is-CloudStor-SWAN-)\n* Export tables to DOC or DOCX:\n    * Svet tried to use [arsenal's write2word() function](https://mayoverse.github.io/arsenal/reference/write2specific.html), but didn't work... inside a R Markdown chunk! Had to run it outside, possibly because the function itself uses knitr...\n    * Richard suggested using [stargazer](https://cran.r-project.org/web/packages/stargazer/index.html)\n    * [gt](https://gt.rstudio.com) is a powerful package for customised tables, and can export to RTF, and its website has a useful [list of R packages for creating tables](https://gt.rstudio.com/#how-gt-fits-in-with-other-packages-that-generate-display-tables).\n* [forcats](https://forcats.tidyverse.org/index.html) has been used twice during the session, once for changing the order of the levels to something arbitrary with `forcats::fct_relevel()`, and once for ordering them by value (with `dplyr::arrange()` followed by `forcats::fct_inorder()`)\n* Sustainable transport planning with [stplanr](https://docs.ropensci.org/stplanr/)\n* [lidR](https://cran.r-project.org/web/packages/lidR/news/news.html) moves away from sp/raster and uses sf/terra/stars instead\n* [gghighlight](https://cran.r-project.org/web/packages/gghighlight/vignettes/gghighlight.html) was suggested to easily highlight (an label) cases on ggplot2 visualisations\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}