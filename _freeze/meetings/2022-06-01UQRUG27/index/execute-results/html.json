{
  "hash": "e349526fe6b4d0d3ed07facd7c7325aa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: UQRUG 27\ndate: '2022-06-01'\ndescription: '**Questions**: ggplot2, species distribution modelling, anomalies in chronology, R Markdown, factoextra'\ncategories: meeting\n---\n\n\n\n\n\n### 2022-06-01: UQRUG 27\n\n#### Attendees\n\n* **Stéphane**: Library, here to help!\n* **Emma**: looking for some help editing a graphic with ggplot2\n* **Rene**: just tagging along\n* **Laura**: working on GLMs\n* **Leonie**: both tagging along and hoping for some help with the adehabitat package\n* **Chris**: just tagging along\n* **David**: using R on HPC \n* **Astrid**: R Markdown issues\n* **Olalekan**: just tagging along\n* \n* ...and 6 other UQRUGers!\n\n\n#### Topics discussed and code\n\n* ggplot2 customisation: moving legend, filtering data out\n    * [Cédric Scherer's slides](https://www.cedricscherer.com/slides/OutlierConf2021_ggplot-wizardry.pdf) (with customisation of legend using the `guides()` function)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n# do not keep these three eye colours\nstarwars %>% \n  filter(!eye_color %in% c(\"blue\", \"yellow\", \"green\"))\n```\n:::\n\n\n\n* Preparation for species distribution modelling. Convert dataframe to sf object with `st_as_sf()`, and will probably need to go from vector data to raster data with `terra::rasterize()`\n    * The [CRAN Task View on spatial data](https://CRAN.R-project.org/view=Spatial) lists a lot of useful packages\n* Importing spatial points for dolphin occurrences, using sf. Constructing a convex hull from them and visualising on an interactive map:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read CSV as dataframe\ndolph <- read.csv(\"Adehabitat.csv\")\n\nlibrary(sf)\n# convert the dataframe to an sf object\ndolph_sf <- st_as_sf(dolph, coords = c(\"Longitude\", \"Latitude\"))\n# see it with default plot method\nplot(dolph_sf)\n\n# interactive map\nlibrary(tmap)\ntmap_mode(\"view\")\ntm_shape(dolph_sf) +\n  tm_dots()\n\n# convex hull\ndolph_hull <- st_convex_hull(st_union(dolph_sf))\n\n# visualise both\ntm_shape(dolph_hull) +\n  tm_borders() +\ntm_shape(dolph_sf) +\n  tm_dots()\n```\n:::\n\n\n\n* Detecting anomalies in chronological sequence of a dataframe. `dplyr::lag()` and `dplyr::lead()` functions can be used for comparisons. `any()` and `all()` help reducing many logical values to one.\n* R Markdown troubles: Rmd is self-contained and needs to include all the necessary code. Its working directory is by default the directory where the .Rmd file is saved.\n* factoextra's `fviz_pca*()` functions for PCA, colouring points per group.\n    * [STHDA has examples](http://www.sthda.com/english/wiki/fviz-pca-quick-principal-component-analysis-data-visualization-r-software-and-data-mining)\n\n\n#### Links\n\n* [R Ladies Brisbane YouTube channel](https://www.youtube.com/channel/UC9oOCJe8kwkZ_6IgTmet9oQ)\n* [Geospatial Analysis Community of Practice](https://geospatial-community.netlify.app/)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}